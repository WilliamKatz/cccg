{"ast":null,"code":"import _classCallCheck from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/William/Workspaces/Web/cccg/src/canvas.js\";\nimport React from 'react';\nimport './index.css';\nimport jsQR from \"jsqr\";\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Canvas, _React$Component);\n\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Canvas).apply(this, arguments));\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var canvas = this.refs.canvas;\n      var ctx = canvas.getContext(\"2d\");\n      var img = this.refs.image;\n\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0);\n        var imgData = ctx.getImageData(0, 0, 600, 600);\n        console.log(imgData);\n        var code = jsQR(imgData, canvas.width, canvas.height);\n\n        if (code) {\n          console.log(\"Found QR code\", code);\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        width: 600,\n        height: 600,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        ref: \"image\",\n        src: this.props.image,\n        alt: \"canvas\",\n        className: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(React.Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/William/Workspaces/Web/cccg/src/canvas.js"],"names":["React","jsQR","Canvas","canvas","refs","ctx","getContext","img","image","onload","drawImage","imgData","getImageData","console","log","code","width","height","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,M;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,UAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,GAAG,GAAG,KAAKH,IAAL,CAAUI,KAAtB;;AAEAD,MAAAA,GAAG,CAACE,MAAJ,GAAa,YAAM;AACjBJ,QAAAA,GAAG,CAACK,SAAJ,CAAcH,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACA,YAAII,OAAO,GAAGN,GAAG,CAACO,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,GAAvB,EAA4B,GAA5B,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,YAAMI,IAAI,GAAGd,IAAI,CAACU,OAAD,EAAUR,MAAM,CAACa,KAAjB,EAAwBb,MAAM,CAACc,MAA/B,CAAjB;;AACA,YAAIF,IAAJ,EAAU;AACRF,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAA7B;AACD;AACF,OARD;AASD;;;6BAGQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAiC,QAAA,MAAM,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,GAAG,EAAC,OAAT;AAAiB,QAAA,GAAG,EAAE,KAAKG,KAAL,CAAWV,KAAjC;AAAwC,QAAA,GAAG,EAAC,QAA5C;AAAqD,QAAA,SAAS,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAzBgBR,KAAK,CAACmB,S;;AA2B3B,eAAejB,MAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport jsQR from \"jsqr\";\n\nclass Canvas extends React.Component {\n  componentDidMount() {\n    const canvas = this.refs.canvas\n    const ctx = canvas.getContext(\"2d\")\n    const img = this.refs.image\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0)\n      var imgData = ctx.getImageData(0, 0, 600, 600);\n      console.log(imgData);\n      const code = jsQR(imgData, canvas.width, canvas.height);\n      if (code) {\n        console.log(\"Found QR code\", code);\n      }\n    }\n  }\n\n\n  render() {\n      return(\n        <div>\n          <canvas ref=\"canvas\" width={600} height={600} />\n          <img ref=\"image\" src={this.props.image} alt=\"canvas\" className=\"hidden\" />\n        </div>\n      )\n    }\n}\nexport default Canvas"]},"metadata":{},"sourceType":"module"}