{"ast":null,"code":"import _classCallCheck from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/William/Workspaces/Web/cccg/src/App.js\";\nimport React, { Component } from 'react';\nimport jsQR from \"jsqr\";\nimport canvas from './canvas';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleFile = function (e) {// You can set content in state and show it in render.\n    };\n\n    _this.onQRCamera = function (file) {\n      console.log(file);\n\n      if (file) {\n        _this.setState({\n          image: URL.createObjectURL(file)\n        });\n      } // if (file) {\n      //   let reader = new FileReader();\n      //   reader.onload = (e) => {\n      //     const code = jsQR(myData, 500, 500); \n      //     if (code) {\n      //       console.log(\"Found QR code\", code);\n      //     } else {\n      //       console.log(\"No QR image found\")\n      //     }\n      //   };\n      //   reader.readAsDataURL(file);\n      // }\n\n    };\n\n    _this.state = {\n      image: \"\"\n    };\n    _this.onQRCamera = _this.onQRCamera.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFile = _this.handleFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"qrcode-text-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: \"environment\",\n        onChange: function onChange(e) {\n          return _this2.onQRCamera(e.target.files[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"qrcode-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n<input type=text class=qrcode-text\n><label class=qrcode-text-btn>\n   <input type=file\n         accept=\"image/*\"\n         capture=environment\n         tabindex=-1>\n</label>\n*/","map":{"version":3,"sources":["/Users/William/Workspaces/Web/cccg/src/App.js"],"names":["React","Component","jsQR","canvas","App","props","handleFile","e","onQRCamera","file","console","log","setState","image","URL","createObjectURL","state","bind","target","files"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAQnBC,UARmB,GAQN,UAACC,CAAD,EAAO,CAClB;AACD,KAVkB;;AAAA,UAYnBC,UAZmB,GAYN,UAACC,IAAD,EAAU;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACR,cAAKG,QAAL,CAAc;AACZC,UAAAA,KAAK,EAAEC,GAAG,CAACC,eAAJ,CAAoBN,IAApB;AADK,SAAd;AAGD,OANoB,CAOrB;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACD,KAnCkB;;AAEjB,UAAKO,KAAL,GAAa;AAAEH,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEA,UAAKL,UAAL,GAAkB,MAAKA,UAAL,CAAgBS,IAAhB,uDAAlB;AACA,UAAKX,UAAL,GAAkB,MAAKA,UAAL,CAAgBW,IAAhB,uDAAlB;AALiB;AAMlB;;;;6BAgCD;AAAA;;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,EAAC,SAA1B;AAAoC,QAAA,OAAO,EAAC,aAA5C;AAA0D,QAAA,QAAQ,EAAE,kBAAAV,CAAC;AAAA,iBACnE,MAAI,CAACC,UAAL,CAAgBD,CAAC,CAACW,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB,CADmE;AAAA,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EAnDelB,S;;AAsDlB,eAAeG,GAAf;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport jsQR from \"jsqr\";\nimport canvas from './canvas';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { image: \"\" };\n\n    this.onQRCamera = this.onQRCamera.bind(this); \n    this.handleFile = this.handleFile.bind(this);\n  }\n\n  handleFile = (e) => {\n    // You can set content in state and show it in render.\n  }\n\n  onQRCamera = (file) => {\n    console.log(file);\n    if (file) {\n      this.setState({\n        image: URL.createObjectURL(file)\n      });\n    }\n    // if (file) {\n    //   let reader = new FileReader();\n    //   reader.onload = (e) => {\n        \n\n    //     const code = jsQR(myData, 500, 500); \n    //     if (code) {\n    //       console.log(\"Found QR code\", code);\n    //     } else {\n    //       console.log(\"No QR image found\")\n    //     }\n    //   };\n    //   reader.readAsDataURL(file);\n   \n\n    // }\n  }\n\n  render()\n  {\n    return(\n      <div>\n        <label className='qrcode-text-btn'>\n          <input type='file' accept='image/*' capture='environment' onChange={e => \n            this.onQRCamera(e.target.files[0])}></input>\n        </label>\n        <input type='text' className='qrcode-text'></input>\n        <canvas ></canvas>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n/*\n<input type=text class=qrcode-text\n><label class=qrcode-text-btn>\n   <input type=file\n         accept=\"image/*\"\n         capture=environment\n         tabindex=-1>\n</label>\n*/"]},"metadata":{},"sourceType":"module"}