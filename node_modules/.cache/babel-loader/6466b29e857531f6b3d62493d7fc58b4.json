{"ast":null,"code":"import _classCallCheck from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/William/Workspaces/Web/cccg/src/canvas.js\";\nimport React from 'react';\nimport './index.css';\nimport jsQR from \"jsqr\";\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Canvas, _React$Component);\n\n  function Canvas() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Canvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getImageDataScaled = function (imageElement) {\n      var maxWidth = 1920;\n      var maxHeight = 1080;\n      var scalingRatio = Math.min(1, maxWidth / imageElement.naturalWidth, maxHeight / imageElement.naturalHeight);\n      var width = imageElement.naturalWidth * scalingRatio;\n      var height = imageElement.naturalHeight * scalingRatio;\n      var canvas = _this.refs.canvas;\n      canvas.width = width;\n      canvas.height = height;\n      var canvasCtx = canvas.getContext('2d');\n      canvasCtx.drawImage(imageElement, 0, 0, width, height);\n      return canvasCtx.getImageData(0, 0, width, height);\n    };\n\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var canvas = this.refs.canvas;\n      var ctx = canvas.getContext(\"2d\");\n      var imageElement = this.refs.image;\n      var width = imageElement.naturalWidth;\n      var height = imageElement.naturalHeight;\n      console.log(imageElement);\n\n      imageElement.onload = function () {\n        var maxWidth = 1920;\n        var maxHeight = 1080;\n        var scalingRatio = Math.min(1, maxWidth / imageElement.naturalWidth, maxHeight / imageElement.naturalHeight);\n        var width = imageElement.naturalWidth * scalingRatio;\n        var height = imageElement.naturalHeight * scalingRatio;\n        var canvas = _this2.refs.canvas;\n        canvas.width = width;\n        canvas.height = height;\n        var canvasCtx = canvas.getContext('2d');\n        canvasCtx.drawImage(imageElement, 0, 0, width, height);\n        var imgData = canvasCtx.getImageData(0, 0, width, height);\n        console.log(imgData);\n        var code = jsQR(imgData, width, height);\n        console.log(code);\n\n        if (code) {\n          console.log(\"Found QR code\", code);\n        } else {}\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        ref: \"image\",\n        src: this.props.image,\n        alt: \"canvas\",\n        className: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Canvas;\n}(React.Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/William/Workspaces/Web/cccg/src/canvas.js"],"names":["React","jsQR","Canvas","getImageDataScaled","imageElement","maxWidth","maxHeight","scalingRatio","Math","min","naturalWidth","naturalHeight","width","height","canvas","refs","canvasCtx","getContext","drawImage","getImageData","ctx","image","console","log","onload","imgData","code","props","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,M;;;;;;;;;;;;;;;;;;UACJC,kB,GAAqB,UAACC,YAAD,EAAkB;AACrC,UAAMC,QAAQ,GAAG,IAAjB;AACA,UAAMC,SAAS,GAAG,IAAlB;AACA,UAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CACnB,CADmB,EAEnBJ,QAAQ,GAAGD,YAAY,CAACM,YAFL,EAGnBJ,SAAS,GAAGF,YAAY,CAACO,aAHN,CAArB;AAMA,UAAMC,KAAK,GAAGR,YAAY,CAACM,YAAb,GAA4BH,YAA1C;AACA,UAAMM,MAAM,GAAGT,YAAY,CAACO,aAAb,GAA6BJ,YAA5C;AAGA,UAAMO,MAAM,GAAG,MAAKC,IAAL,CAAUD,MAAzB;AACAA,MAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACAE,MAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AAEA,UAAMG,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAlB;AACAD,MAAAA,SAAS,CAACE,SAAV,CAAoBd,YAApB,EAAkC,CAAlC,EAAqC,CAArC,EAAwCQ,KAAxC,EAA+CC,MAA/C;AAEA,aAAOG,SAAS,CAACG,YAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BP,KAA7B,EAAoCC,MAApC,CAAP;AACD,K;;;;;;;wCAEmB;AAAA;;AAClB,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,UAAMM,GAAG,GAAGN,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMb,YAAY,GAAG,KAAKW,IAAL,CAAUM,KAA/B;AAEA,UAAMT,KAAK,GAAGR,YAAY,CAACM,YAA3B;AACA,UAAMG,MAAM,GAAGT,YAAY,CAACO,aAA5B;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAZ;;AACAA,MAAAA,YAAY,CAACoB,MAAb,GAAsB,YAAM;AAC1B,YAAMnB,QAAQ,GAAG,IAAjB;AACA,YAAMC,SAAS,GAAG,IAAlB;AACA,YAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CACnB,CADmB,EAEnBJ,QAAQ,GAAGD,YAAY,CAACM,YAFL,EAGnBJ,SAAS,GAAGF,YAAY,CAACO,aAHN,CAArB;AAMA,YAAMC,KAAK,GAAGR,YAAY,CAACM,YAAb,GAA4BH,YAA1C;AACA,YAAMM,MAAM,GAAGT,YAAY,CAACO,aAAb,GAA6BJ,YAA5C;AAGA,YAAMO,MAAM,GAAG,MAAI,CAACC,IAAL,CAAUD,MAAzB;AACAA,QAAAA,MAAM,CAACF,KAAP,GAAeA,KAAf;AACAE,QAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AAEA,YAAMG,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAlB;AACAD,QAAAA,SAAS,CAACE,SAAV,CAAoBd,YAApB,EAAkC,CAAlC,EAAqC,CAArC,EAAwCQ,KAAxC,EAA+CC,MAA/C;AAEA,YAAMY,OAAO,GAAGT,SAAS,CAACG,YAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BP,KAA7B,EAAoCC,MAApC,CAAhB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,YAAMC,IAAI,GAAGzB,IAAI,CAACwB,OAAD,EAAUb,KAAV,EAAiBC,MAAjB,CAAjB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AACA,YAAIA,IAAJ,EAAU;AACRJ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,IAA7B;AACD,SAFD,MAEO,CAEN;AACF,OA7BD;AA8BD;;;6BAGQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,GAAG,EAAC,OAAT;AAAiB,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWN,KAAjC;AAAwC,QAAA,GAAG,EAAC,QAA5C;AAAqD,QAAA,SAAS,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAxEgBrB,KAAK,CAAC4B,S;;AA0E3B,eAAe1B,MAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport jsQR from \"jsqr\";\n\nclass Canvas extends React.Component {\n  getImageDataScaled = (imageElement) => {\n    const maxWidth = 1920\n    const maxHeight = 1080\n    const scalingRatio = Math.min(\n      1, \n      maxWidth / imageElement.naturalWidth, \n      maxHeight / imageElement.naturalHeight\n    )\n  \n    const width = imageElement.naturalWidth * scalingRatio\n    const height = imageElement.naturalHeight * scalingRatio\n  \n  \n    const canvas = this.refs.canvas\n    canvas.width = width\n    canvas.height = height\n  \n    const canvasCtx = canvas.getContext('2d')\n    canvasCtx.drawImage(imageElement, 0, 0, width, height)\n  \n    return canvasCtx.getImageData(0, 0, width, height)\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas\n    const ctx = canvas.getContext(\"2d\")\n    const imageElement = this.refs.image\n\n    const width = imageElement.naturalWidth\n    const height = imageElement.naturalHeight\n    console.log(imageElement)\n    imageElement.onload = () => {\n      const maxWidth = 1920\n      const maxHeight = 1080\n      const scalingRatio = Math.min(\n        1, \n        maxWidth / imageElement.naturalWidth, \n        maxHeight / imageElement.naturalHeight\n      )\n    \n      const width = imageElement.naturalWidth * scalingRatio\n      const height = imageElement.naturalHeight * scalingRatio\n    \n    \n      const canvas = this.refs.canvas\n      canvas.width = width\n      canvas.height = height\n    \n      const canvasCtx = canvas.getContext('2d')\n      canvasCtx.drawImage(imageElement, 0, 0, width, height)\n    \n      const imgData = canvasCtx.getImageData(0, 0, width, height)\n      console.log(imgData);\n      const code = jsQR(imgData, width, height);\n      console.log(code);\n      if (code) {\n        console.log(\"Found QR code\", code);\n      } else {\n\n      }\n    }\n  }\n\n\n  render() {\n      return(\n        <div>\n          <canvas ref=\"canvas\" className=\"canvas\" />\n          <img ref=\"image\" src={this.props.image} alt=\"canvas\" className=\"hidden\" />\n        </div>\n      )\n    }\n}\nexport default Canvas"]},"metadata":{},"sourceType":"module"}