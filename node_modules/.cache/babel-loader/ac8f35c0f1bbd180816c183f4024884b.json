{"ast":null,"code":"import _classCallCheck from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/William/Workspaces/Web/cccg/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/William/Workspaces/Web/cccg/src/QRReader.js\";\nimport React, { Component } from 'react';\nimport QrReader from \"react-qr-reader\";\n\nvar QRContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QRContainer, _Component);\n\n  function QRContainer(props) {\n    var _this;\n\n    _classCallCheck(this, QRContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QRContainer).call(this, props));\n    _this.state = {\n      delay: 300,\n      result: \"No result\"\n    };\n    _this.handleScan = _this.handleScan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(QRContainer, [{\n    key: \"handleScan\",\n    value: function handleScan(data) {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(err) {\n      console.error(err);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(QrReader, {\n        delay: this.state.delay,\n        onError: this.handleError,\n        onScan: this.handleScan,\n        style: {\n          width: \"25%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.state.result));\n    }\n  }]);\n\n  return QRContainer;\n}(Component);\n\nexport { QRContainer as default };\n;","map":{"version":3,"sources":["/Users/William/Workspaces/Web/cccg/src/QRReader.js"],"names":["React","Component","QrReader","QRContainer","props","state","delay","result","handleScan","bind","handleError","data","setState","err","console","error","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAEqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAPiB;AAQlB;;;;+BAEUE,I,EAAM;AACf,UAAIA,IAAJ,EAAU;AACR,aAAKC,QAAL,CAAc;AACZL,UAAAA,MAAM,EAAEI;AADI,SAAd;AAGD;AACF;;;gCACWE,G,EAAK;AACfC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KADpB;AAEE,QAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,QAAA,MAAM,EAAE,KAAKF,UAHf;AAIE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKX,KAAL,CAAWE,MAAf,CAPF,CADF;AAWD;;;;EAjCsCN,S;;SAApBE,W;AAkCpB","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from \"react-qr-reader\";\n\nexport default class QRContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delay: 300,\n      result: \"No result\"\n    };\n    this.handleScan = this.handleScan.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  handleScan(data) {\n    if (data) {\n      this.setState({\n        result: data\n      });\n    }\n  }\n  handleError(err) {\n    console.error(err);\n  }\n  render() {\n    return (\n      <div>\n        <QrReader\n          delay={this.state.delay}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          style={{ width: \"25%\" }}\n        />\n        <p>{this.state.result}</p>\n      </div>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}